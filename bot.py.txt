import re
import logging
from aiogram import Bot, Dispatcher, executor, types

TOKEN = "7751211148:AAFtCaCjjplSp7oczFb4f0EJChz_2UCX3Y4"
ADMIN_ID = 7128578887  # –¢–≤–æ–π Telegram ID

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.\n\n"
        "üìã –í–æ—Ç –ø—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:\n"
        "üêæ –û—Ç–¥–∞–º –∫–æ—Ç—ë–Ω–∫–∞ 1,5 –º–µ—Å—è—Ü–∞, –∑–¥–æ—Ä–æ–≤, –∫—É—à–∞–µ—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n"
        "üìç –ì–æ—Ä–æ–¥: –ö–∏—Ä–æ–≤\n"
        "üìû –ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏: @username –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω\n\n"
        "–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –ø–∏—Å–∞—Ç—å –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ –Ω–æ–≤–æ–≥–æ —Ö–æ–∑—è–∏–Ω–∞!"
    )

def contains_contact(text: str) -> bool:
    if re.search(r'@\w{5,}', text):
        return True
    if re.search(r'(\+?\d[\d\s\-]{5,}\d)', text):
        return True
    return False

@dp.message_handler(content_types=types.ContentType.ANY)
async def forward_ad_to_admin(message: types.Message):
    if message.chat.type != 'private':
        return

    if message.content_type == 'text':
        if not contains_contact(message.text):
            await message.answer(
                "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç ‚Äî —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å Telegram @username –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
                "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑."
            )
            return

    await message.forward(ADMIN_ID)
    await message.answer("–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.")

if name == 'main':
    executor.start_polling(dp, skip_updates=True)